syntax = "proto3";
package github.com.demimurg.twitter.v1;
option go_package = "github.com/demimurg/twitter/pkg/proto";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto"; // examples: https://github.com/bufbuild/protoc-gen-validate

service Twitter {
    rpc AddTweet(AddTweetRequest) returns (AddTweetResponse);
    rpc AddComment(AddCommentRequest) returns (AddCommentResponse);
    rpc UpdateTweet(UpdateTweetRequest) returns (UpdateTweetResponse);
    rpc UpdateComment(UpdateCommentRequest) returns (UpdateCommentResponse);
    
    rpc GetNewsFeed(GetNewsFeedRequest) returns (GetNewsFeedResponse);
    rpc Follow(FollowRequest) returns (FollowResponse);
    rpc Unfollow(UnfollowRequest) returns (UnfollowResponse);
    rpc GetFollowing(GetFollowingRequest) returns (GetFollowingResponse);
    rpc GetFollowers(GetFollowersRequest) returns (GetFollowersResponse);
    rpc RecommendUsers(RecommendUsersRequest) returns (RecommendUsersResponse);
    
    rpc Register(RegisterRequest) returns (RegisterResponse);
    rpc UpdateCaption(UpdateCaptionRequest) returns (UpdateCaptionResponse);
    rpc Login(LoginRequest) returns (LoginResponse);
}

// TODO: user id should be removed after auth with jwt will be implemented

message AddTweetRequest {
    int64 user_id = 1;
    string text = 2 [(validate.rules).string.max_bytes = 512];
};

message AddTweetResponse {
    int64 tweet_id = 1;
};

message AddCommentRequest {
    int64 user_id = 1;
    int64 tweet_id = 2;
    string text = 3 [(validate.rules).string.max_bytes = 512];
};

message AddCommentResponse {
    int64 comment_id = 1;
};

message UpdateTweetRequest {
    int64 user_id = 1;
    int64 tweet_id = 2 [(validate.rules).int64.gte = 0];
    string new_text = 3 [(validate.rules).string.max_bytes = 512];
};

message UpdateTweetResponse {};

message UpdateCommentRequest {
    int64 user_id = 1;
    int64 comment_id = 2 [(validate.rules).int64.gte = 0];
    string new_text = 3 [(validate.rules).string.max_bytes = 512];
};

message UpdateCommentResponse {};

message GetNewsFeedRequest {
    int64 user_id = 1;
    int64 limit = 2 [(validate.rules).int64.gt = 0];
    int64 offset = 3 [(validate.rules).int64.gte = 0];
};

message GetNewsFeedResponse {
    repeated string tweets = 1;
};

message RegisterRequest {
    UserProfile user = 1 [(validate.rules).message.required = true];
};

message UserProfile {
    string email = 1 [(validate.rules).string.email = true];
    string full_name = 2 [(validate.rules).string = {min_len: 2, max_len: 64}];
    string caption = 3 [(validate.rules).string.max_bytes = 512];
    // date_of_birth should be in range (now - 100 years, now)
    google.protobuf.Timestamp date_of_birth = 4 [(validate.rules).timestamp = {
        lt_now: true, within: {seconds: 3153600000} // 100 years in seconds
    }];
};

message RegisterResponse {
    int64 user_id = 1;
};

message UpdateCaptionRequest {
    int64 user_id = 1;
    string new_caption = 2 [(validate.rules).string.max_bytes = 512];
};

message UpdateCaptionResponse {};

message FollowRequest {
    int64 user_id = 1;
    int64 new_follower_id = 2 [(validate.rules).int64.gt = 0];
};

message FollowResponse {};

message UnfollowRequest {
    int64 user_id = 1;
    int64 old_follower_id = 2 [(validate.rules).int64.gt = 0];
};

message UnfollowResponse {};

message LoginRequest {
    string email = 1 [(validate.rules).string.email = true];
};

message LoginResponse {
    int64 user_id = 1;
    UserProfile user_profile = 2;
};

message RecommendUsersRequest {
    int64 user_id = 1;
};

message RecommendUsersResponse {
    repeated UserProfile users = 1;
};

message GetFollowingRequest {
    int64 user_id = 1;
};

message GetFollowingResponse {
    repeated UserProfile users = 1;
};

message GetFollowersRequest {
    int64 user_id = 1;
};

message GetFollowersResponse {
    repeated UserProfile users = 1;
};