image: ghcr.io/demimurg/twitter
replicas: 1
host: "<secret>"

env:
    LOG_LEVEL: info
    MIGRATIONS_DIR: "./migrations"
    POSTGRESQL_DSN: "<secret>"

# --------------------------------------- INFRA ---------------------------------------

postgresql:
    fullnameOverride: postgresql # removes chart name ("twitter") prefix
    auth:
        postgresPassword: "<secret>"
    primary:
        persistence:
            size: 10Gi

grafana:
    fullnameOverride: grafana
    persistence:
        enabled: true
        size: 2Gi
    datasources:
        datasources.yaml:
            apiVersion: 1
            datasources:
                - name: Loki
                  type: loki
                  access: proxy
                  url: http://loki:3100
                  isDefault: true
                - name: Mimir
                  type: prometheus
                  access: proxy
                  url: http://mimir:9009/prometheus

loki:
    fullnameOverride: loki
    loki:
        commonConfig:
            replication_factor: 1
        storage:
            type: filesystem
        auth_enabled: false
    singleBinary:
        replicas: 1
    monitoring:
        selfMonitoring:
            enabled: false
            grafanaAgent:
                installOperator: false
        serviceMonitor:
            enabled: false
        lokiCanary:
            enabled: false
    test:
        enabled: false
    gateway:
        enabled: false

mimir:
    image: grafana/mimir:2.8.0

grafana-agent:
    fullnameOverride: grafana-agent
    agent:
        configMap:
            content: |-
                discovery.kubernetes "pods" {
                    role = "pod"
                }

                discovery.relabel "pods" {
                    targets = discovery.kubernetes.pods.targets

                    rule {
                        action = "replace"
                        source_labels = [
                            "__meta_kubernetes_pod_label_app_kubernetes_io_name",
                            "__meta_kubernetes_pod_label_k8s_app",
                            "__meta_kubernetes_pod_label_app",
                        ]
                        target_label = "app"
                        separator = ""
                    }
                    rule {
                        action = "replace"
                        source_labels = ["__meta_kubernetes_pod_name"]
                        target_label = "pod"
                    }
                    rule {
                        action = "replace"
                        source_labels = ["__meta_kubernetes_namespace"]
                        target_label = "namespace"
                    }
                }

                loki.source.kubernetes "pods" {
                    targets    = discovery.relabel.pods.output
                    forward_to = [loki.write.default.receiver]
                }

                loki.write "default" {
                    endpoint {
                        url = "http://loki:3100/loki/api/v1/push"
                    }
                }

                prometheus.scrape "twitter" {
                    targets = [{"__address__" = "twitter:81"}]
                    forward_to = [prometheus.remote_write.default.receiver]
                }

                prometheus.remote_write "default" {
                    endpoint {
                        url = "http://mimir:9009/api/v1/push"
                    }
                }
